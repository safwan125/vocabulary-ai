import React from 'react';
import '../styles/VocabularyCard.css';

const VocabularyCard = ({ wordData, loading }) => {
  if (loading) {
    return (
      <div className="vocabulary-card loading">
        <div className="loading-spinner"></div>
        <p>Generating your vocabulary word...</p>
      </div>
    );
  }

  if (!wordData || wordData.error) {
    return (
      <div className="vocabulary-card error">
        <h3>Error</h3>
        <p>{wordData?.message || 'Failed to load vocabulary word. Please try again.'}</p>
      </div>
    );
  }

  const { 
    word, 
    definition, 
    example, 
    synonyms = [], 
    antonyms = [], 
    etymology, 
    difficulty, 
    partOfSpeech,
    isOfflineMode
  } = wordData;

  return (
    <div className={`vocabulary-card ${difficulty} ${isOfflineMode ? 'offline-mode' : ''}`}>
      {isOfflineMode && (
        <div className="offline-indicator">
          <span className="offline-icon">ðŸ“´</span>
          <span className="offline-text">Offline Mode</span>
        </div>
      )}
      
      <div className="card-header">
        <h2 className="word">{word}</h2>
        <span className="part-of-speech">{partOfSpeech}</span>
        <span className={`difficulty-badge ${difficulty}`}>{difficulty}</span>
      </div>
      
      <div className="card-body">
        <div className="section">
          <h3>Definition</h3>
          <p>{definition}</p>
        </div>
        
        <div className="section">
          <h3>Example</h3>
          <p className="example">"{example}"</p>
        </div>
        
        {synonyms.length > 0 && (
          <div className="section">
            <h3>Synonyms</h3>
            <div className="tags">
              {synonyms.map((synonym, index) => (
                <span key={index} className="tag">{synonym}</span>
              ))}
            </div>
          </div>
        )}
        
        {antonyms.length > 0 && (
          <div className="section">
            <h3>Antonyms</h3>
            <div className="tags">
              {antonyms.map((antonym, index) => (
                <span key={index} className="tag antonym">{antonym}</span>
              ))}
            </div>
          </div>
        )}
        
        {etymology && (
          <div className="section">
            <h3>Etymology</h3>
            <p>{etymology}</p>
          </div>
        )}
        
        {isOfflineMode ? (
          <div className="offline-note">
            <p>This word is from our offline collection while we're unable to connect to the Gemini API.</p>
          </div>
        ) : (
          <div className="model-note">
            <p>Generated by Gemini AI</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default VocabularyCard; 